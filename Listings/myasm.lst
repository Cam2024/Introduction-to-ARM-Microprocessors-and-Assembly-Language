


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             asm_func, CODE, READONLY
    2 00000000                 THUMB
    3 00000000         ; Export my_asm function location so that C compiler can
                        find it and link
    4 00000000                 EXPORT           my_asm
    5 00000000         my_asm  PROC
    6 00000000         ; Test routine that does something!
    7 00000000         
    8 00000000 1847            ADDS             r7, r0, r1  ;
    9 00000002         
   10 00000002         ; Some arithmetic
   11 00000002         
   12 00000002 220E            MOVS             r2, #14     ;move a number into
                                                             reigister 2 
   13 00000004 2325            MOVS             r3, #37     ;move a 2nd no. int
                                                            o reg. 3
   14 00000006         
   15 00000006 1DD4            ADDS             r4, r2, #7  ;put sum of reg.2 a
                                                            nd 7 in reg.3
   16 00000008 18D5            ADDS             r5, r2, r3  ;put sum of r2 and 
                                                            r3 in r5
   17 0000000A         
   18 0000000A 189E            ADDS             r6, r3, r2  ;reverse the order 
                                                            
   19 0000000C         
   20 0000000C 1E50            SUBS             r0, r2, #1  ;subtract 1 from r2
                                                            
   21 0000000E         
   22 0000000E 1AD1            SUBS             r1, r2, r3  ;subtract r3 from r
                                                            2
   23 00000010 1A9A            SUBS             r2, r3, r2  ;reverse the order
   24 00000012         
   25 00000012         ; Some logic
   26 00000012         
   27 00000012 2211            MOVS             r2, #0x0011 ;set bit pattern 00
                                                            11
   28 00000014 4613            MOV              r3, r2
   29 00000016 33F0            ADDS             r3, #0x00F0 ;set bit pattern 01
                                                            01
   30 00000018         
   31 00000018 4614            MOV              r4, r2
   32 0000001A 401C            ANDS             r4, r3      ;AND
   33 0000001C 4615            MOV              r5, r2
   34 0000001E 431D            ORRS             r5, r3      ;OR
   35 00000020 4616            MOV              r6, r2
   36 00000022 405E            EORS             r6, r3      ;exclusive OR
   37 00000024 4610            MOV              r0, r2
   38 00000026 4398            BICS             r0, r3      ;bit clear
   39 00000028 4619            MOV              r1, r3
   40 0000002A 4391            BICS             r1, r2      ;bit clear in rever
                                                            se order
   41 0000002C         
   42 0000002C         ; Some unconditional branches
   43 0000002C         
   44 0000002C 2200            MOVS             r2, #0      ;clear register 2
   45 0000002E         loop1
   46 0000002E 1C52            ADDS             r2, r2, #1  ;increment register
                                                             2
   47 00000030 E7FD            B                loop1       ;loop always



ARM Macro Assembler    Page 2 


   48 00000032         
   49 00000032 2200            MOVS             r2, #0      ;clear register 2  
                                                            
   50 00000034         loop2
   51 00000034 1C52            ADDS             r2, r2, #1  ;increment register
                                                             2
   52 00000036 1C00            ADDS             r0, r0, #0  ;do nothing
   53 00000038 E7FC            B                loop2       ;loop always
   54 0000003A         
   55 0000003A 2200            MOVS             r2, #0      ;clear register 2
   56 0000003C         loop3
   57 0000003C 1C52            ADDS             r2, r2, #1  ;increment register
                                                             2
   58 0000003E 1C00            ADDS             r0, r0, #0  ;do nothing
   59 00000040 1C00            ADDS             r0, r0, #0  ;do nothing
   60 00000042 E7FB            B                loop3       ;loop always
   61 00000044         
   62 00000044         ; Setting and clearing flags
   63 00000044         
   64 00000044 2200            MOVS             r2, #0      ;clear r2 and set/c
                                                            lear flags
   65 00000046 2301            MOVS             r3, #1      ;set value in r3 to
                                                             1
   66 00000048         
   67 00000048 4614            MOV              r4, r2      ;move r2 to r4
   68 0000004A 0014            MOVS             r4, r2      ;same as previous i
                                                            nstruction but set/
                                                            clear flags
   69 0000004C         
   70 0000004C 18D5            ADDS             r5, r2, r3  ;add r2 and r3 and 
                                                            set flags
   71 0000004E         
   72 0000004E 1AD6            SUBS             r6, r2, r3  ;r8:= r3 - r2 and s
                                                            et flags
   73 00000050         
   74 00000050         ; Conditional branching
   75 00000050         
   76 00000050 480D            LDR              r0, =0x7F000000 
                                                            ;set value in r0
   77 00000052 490E            LDR              r1, =0x81000000 
                                                            ;set value in r1
   78 00000054 2203            MOVS             r2, #3
   79 00000056 2307            MOVS             r3, #7
   80 00000058 2400            MOVS             r4, #0
   81 0000005A 2500            MOVS             r5, #0
   82 0000005C 46A8            MOV              r8, r5
   83 0000005E 46A9            MOV              r9, r5      ;set value in r9 to
                                                             0
   84 00000060 180E            ADDS             r6, r1, r0  ;add r1 and r0 and 
                                                            set/clear flags
   85 00000062 D000            BEQ              next1       ;branch if zero fla
                                                            g set
   86 00000064 4414            ADD              r4, r2      ;add if zero flag c
                                                            lear
   87 00000066         next1
   88 00000066 D100            BNE              next2       ;branch if zero fla
                                                            g clear
   89 00000068 441C            ADD              r4, r3      ;add if zero flag s
                                                            et



ARM Macro Assembler    Page 3 


   90 0000006A         next2
   91 0000006A D200            BCS              next3       ;branch if carry fl
                                                            ag set
   92 0000006C 4415            ADD              r5, r2      ;add if carry flag 
                                                            clear
   93 0000006E         next3
   94 0000006E D300            BCC              next4       ;branch if carry fl
                                                            ag clear
   95 00000070 441D            ADD              r5, r3      ;add if carry flag 
                                                            set
   96 00000072         next4
   97 00000072 D400            BMI              next5       ;branch if negative
                                                             flag set
   98 00000074 4490            ADD              r8, r2      ;add if negative fl
                                                            ag clear
   99 00000076         next5
  100 00000076 D500            BPL              next6       ;branch if negative
                                                             flag clear
  101 00000078 4498            ADD              r8, r3      ;add if negative fl
                                                            ag set
  102 0000007A         next6
  103 0000007A D600            BVS              next7       ;branch if overflow
                                                             flag set
  104 0000007C 4491            ADD              r9, r2      ;add if overflow fl
                                                            ag clear
  105 0000007E         next7
  106 0000007E D700            BVC              last        ;branch if overflow
                                                             flag clear
  107 00000080 4499            ADD              r9, r3      ;add if overflow fl
                                                            ag set
  108 00000082         last
  109 00000082         
  110 00000082         ; return value passed back to C in r0
  111 00000082 0038            MOVS             r0, r7
  112 00000084         
  113 00000084         ; Return to C using link register (Branch indirect using
                        LR - a return)
  114 00000084 4770            BX               LR
  115 00000086         
  116 00000086                 ENDP
  117 00000086         
  118 00000086                 END
              00 00 7F000000 
              81000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0+ --apcs=inter
work --depend=.\objects\myasm.d -o.\objects\myasm.o -IC:\Users\marsland\Documen
ts\data\ARM\Keil\Exp26\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include 
-IC:\Keil_v5\ARM\PACK\Keil\Kinetis_KLxx_DFP\1.7.0\Device\Include --predefine="_
_UVISION_VERSION SETA 515" --predefine="_RTE_ SETA 1" --predefine="MKL46Z256xxx
4 SETA 1" --list=.\listings\myasm.lst ..\asm_test\myasm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

asm_func 00000000

Symbol: asm_func
   Definitions
      At line 1 in file ..\asm_test\myasm.s
   Uses
      None
Comment: asm_func unused
last 00000082

Symbol: last
   Definitions
      At line 108 in file ..\asm_test\myasm.s
   Uses
      At line 106 in file ..\asm_test\myasm.s
Comment: last used once
loop1 0000002E

Symbol: loop1
   Definitions
      At line 45 in file ..\asm_test\myasm.s
   Uses
      At line 47 in file ..\asm_test\myasm.s
Comment: loop1 used once
loop2 00000034

Symbol: loop2
   Definitions
      At line 50 in file ..\asm_test\myasm.s
   Uses
      At line 53 in file ..\asm_test\myasm.s
Comment: loop2 used once
loop3 0000003C

Symbol: loop3
   Definitions
      At line 56 in file ..\asm_test\myasm.s
   Uses
      At line 60 in file ..\asm_test\myasm.s
Comment: loop3 used once
my_asm 00000000

Symbol: my_asm
   Definitions
      At line 5 in file ..\asm_test\myasm.s
   Uses
      At line 4 in file ..\asm_test\myasm.s
Comment: my_asm used once
next1 00000066

Symbol: next1
   Definitions
      At line 87 in file ..\asm_test\myasm.s
   Uses
      At line 85 in file ..\asm_test\myasm.s
Comment: next1 used once
next2 0000006A

Symbol: next2



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 90 in file ..\asm_test\myasm.s
   Uses
      At line 88 in file ..\asm_test\myasm.s
Comment: next2 used once
next3 0000006E

Symbol: next3
   Definitions
      At line 93 in file ..\asm_test\myasm.s
   Uses
      At line 91 in file ..\asm_test\myasm.s
Comment: next3 used once
next4 00000072

Symbol: next4
   Definitions
      At line 96 in file ..\asm_test\myasm.s
   Uses
      At line 94 in file ..\asm_test\myasm.s
Comment: next4 used once
next5 00000076

Symbol: next5
   Definitions
      At line 99 in file ..\asm_test\myasm.s
   Uses
      At line 97 in file ..\asm_test\myasm.s
Comment: next5 used once
next6 0000007A

Symbol: next6
   Definitions
      At line 102 in file ..\asm_test\myasm.s
   Uses
      At line 100 in file ..\asm_test\myasm.s
Comment: next6 used once
next7 0000007E

Symbol: next7
   Definitions
      At line 105 in file ..\asm_test\myasm.s
   Uses
      At line 103 in file ..\asm_test\myasm.s
Comment: next7 used once
13 symbols
348 symbols in table
